{"version":3,"file":"utils.browser.js","sourceRoot":"","sources":["../../../src/utils/utils.browser.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,qKAAqK;AACrK,MAAM,UAAU,cAAc,KAAI,CAAC;AAEnC,MAAM,CAAC,KAAK,UAAU,yBAAyB,CAAC,IAAU;IACxD,MAAM,YAAY,GAAG,IAAI,OAAO,CAAc,UAAS,OAAO;QAC5D,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,MAAM,CAAC,SAAS,GAAG;YACjB,OAAO,CAAC,MAAM,CAAC,MAAqB,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC;IAClC,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,EAAE;QACzB,MAAM,IAAI,UAAU,CAAC,iDAAiD,CAAC,CAAC;KACzE;IAED,OAAO,IAAI,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/no-empty-function, @typescript-eslint/explicit-module-boundary-types\nexport function streamToBuffer() {}\n\nexport async function getFirstFourBytesFromBlob(data: Blob): Promise<Uint8Array> {\n  const arrayPromise = new Promise<ArrayBuffer>(function(resolve) {\n    const reader = new FileReader();\n\n    reader.onloadend = function() {\n      resolve(reader.result as ArrayBuffer);\n    };\n\n    reader.readAsArrayBuffer(data);\n  });\n\n  const buffer = await arrayPromise;\n  if (buffer.byteLength < 4) {\n    throw new RangeError(\"Invalid input. Expect more than 4 bytes of data\");\n  }\n\n  return new Uint8Array(buffer, 0, 4);\n}\n"]}